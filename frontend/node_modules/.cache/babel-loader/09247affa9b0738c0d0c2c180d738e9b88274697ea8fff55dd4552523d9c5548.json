{"ast":null,"code":"const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport const apiCall = async (endpoint, options = {}) => {\n  try {\n    // Don't set Content-Type for FormData - let browser set it with boundary\n    const headers = {};\n    if (!(options.body instanceof FormData)) {\n      headers['Content-Type'] = 'application/json';\n    }\n    const response = await fetch(`${API_BASE}${endpoint}`, {\n      ...options,\n      headers: {\n        ...headers,\n        ...options.headers\n      },\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      const errorMessage = errorData.message || `API Error: ${response.statusText}`;\n      throw new Error(errorMessage);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('API call failed:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_URL","apiCall","endpoint","options","headers","body","FormData","response","fetch","credentials","ok","errorData","json","catch","errorMessage","message","statusText","Error","error","console"],"sources":["C:/Users/YSXP/Desktop/New folder/frontend/src/utils/api.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nexport const apiCall = async (endpoint, options = {}) => {\n  try {\n    // Don't set Content-Type for FormData - let browser set it with boundary\n    const headers = {};\n    if (!(options.body instanceof FormData)) {\n      headers['Content-Type'] = 'application/json';\n    }\n    \n    const response = await fetch(`${API_BASE}${endpoint}`, {\n      ...options,\n      headers: {\n        ...headers,\n        ...options.headers,\n      },\n      credentials: 'include',\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      const errorMessage = errorData.message || `API Error: ${response.statusText}`;\n      throw new Error(errorMessage);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API call failed:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAEzE,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACvD,IAAI;IACF;IACA,MAAMC,OAAO,GAAG,CAAC,CAAC;IAClB,IAAI,EAAED,OAAO,CAACE,IAAI,YAAYC,QAAQ,CAAC,EAAE;MACvCF,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;IAC9C;IAEA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,QAAQ,GAAGK,QAAQ,EAAE,EAAE;MACrD,GAAGC,OAAO;MACVC,OAAO,EAAE;QACP,GAAGA,OAAO;QACV,GAAGD,OAAO,CAACC;MACb,CAAC;MACDK,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;MACzD,MAAMC,YAAY,GAAGH,SAAS,CAACI,OAAO,IAAI,cAAcR,QAAQ,CAACS,UAAU,EAAE;MAC7E,MAAM,IAAIC,KAAK,CAACH,YAAY,CAAC;IAC/B;IAEA,OAAO,MAAMP,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}