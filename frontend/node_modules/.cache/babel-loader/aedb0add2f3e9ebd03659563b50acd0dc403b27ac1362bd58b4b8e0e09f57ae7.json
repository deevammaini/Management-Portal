{"ast":null,"code":"import _objectSpread from\"C:/Users/YSXP/Desktop/New folder/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE=process.env.REACT_APP_API_URL||'http://localhost:8000';export const apiCall=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{// Don't set Content-Type for FormData - let browser set it with boundary\nconst headers={};if(!(options.body instanceof FormData)){headers['Content-Type']='application/json';}const response=await fetch(\"\".concat(API_BASE).concat(endpoint),_objectSpread(_objectSpread({},options),{},{headers:_objectSpread(_objectSpread({},headers),options.headers),credentials:'include'}));if(!response.ok){const errorData=await response.json().catch(()=>({}));const errorMessage=errorData.message||\"API Error: \".concat(response.statusText);throw new Error(errorMessage);}return await response.json();}catch(error){console.error('API call failed:',error);throw error;}};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_URL","apiCall","endpoint","options","arguments","length","undefined","headers","body","FormData","response","fetch","concat","_objectSpread","credentials","ok","errorData","json","catch","errorMessage","message","statusText","Error","error","console"],"sources":["C:/Users/YSXP/Desktop/New folder/frontend/src/utils/api.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nexport const apiCall = async (endpoint, options = {}) => {\n  try {\n    // Don't set Content-Type for FormData - let browser set it with boundary\n    const headers = {};\n    if (!(options.body instanceof FormData)) {\n      headers['Content-Type'] = 'application/json';\n    }\n    \n    const response = await fetch(`${API_BASE}${endpoint}`, {\n      ...options,\n      headers: {\n        ...headers,\n        ...options.headers,\n      },\n      credentials: 'include',\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      const errorMessage = errorData.message || `API Error: ${response.statusText}`;\n      throw new Error(errorMessage);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API call failed:', error);\n    throw error;\n  }\n};\n"],"mappings":"8HAAA,KAAM,CAAAA,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAEzE,MAAO,MAAM,CAAAC,OAAO,CAAG,cAAAA,CAAOC,QAAQ,CAAmB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAClD,GAAI,CACF;AACA,KAAM,CAAAG,OAAO,CAAG,CAAC,CAAC,CAClB,GAAI,EAAEJ,OAAO,CAACK,IAAI,WAAY,CAAAC,QAAQ,CAAC,CAAE,CACvCF,OAAO,CAAC,cAAc,CAAC,CAAG,kBAAkB,CAC9C,CAEA,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIf,QAAQ,EAAAe,MAAA,CAAGV,QAAQ,EAAAW,aAAA,CAAAA,aAAA,IAC9CV,OAAO,MACVI,OAAO,CAAAM,aAAA,CAAAA,aAAA,IACFN,OAAO,EACPJ,OAAO,CAACI,OAAO,CACnB,CACDO,WAAW,CAAE,SAAS,EACvB,CAAC,CAEF,GAAI,CAACJ,QAAQ,CAACK,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CACzD,KAAM,CAAAC,YAAY,CAAGH,SAAS,CAACI,OAAO,gBAAAR,MAAA,CAAkBF,QAAQ,CAACW,UAAU,CAAE,CAC7E,KAAM,IAAI,CAAAC,KAAK,CAACH,YAAY,CAAC,CAC/B,CAEA,MAAO,MAAM,CAAAT,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CACxC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}