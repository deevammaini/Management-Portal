{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{io}from'socket.io-client';import{jsx as _jsx}from\"react/jsx-runtime\";const SocketContext=/*#__PURE__*/createContext();export const useSocket=()=>{const context=useContext(SocketContext);if(!context){throw new Error('useSocket must be used within a SocketProvider');}return context;};export const SocketProvider=_ref=>{let{children}=_ref;const[socket,setSocket]=useState(null);const[isConnected,setIsConnected]=useState(false);useEffect(()=>{// Initialize socket connection\nconst newSocket=io('http://localhost:8000',{transports:['websocket','polling'],autoConnect:true});// Connection event handlers\nnewSocket.on('connect',()=>{console.log('🔌 Connected to WebSocket server');setIsConnected(true);// Join admin room for targeted updates\nnewSocket.emit('join_room',{room:'admin'});console.log('🏠 Joined admin room');});newSocket.on('disconnect',()=>{console.log('🔌 Disconnected from WebSocket server');setIsConnected(false);});newSocket.on('connected',data=>{console.log('✅ WebSocket connection confirmed:',data.message);});newSocket.on('joined_room',data=>{console.log('🏠 Joined room:',data.room);});// Database change event handler\nnewSocket.on('database_change',data=>{console.log('📡 Received database change via WebSocket:',data);// Emit custom event for components to listen to\nwindow.dispatchEvent(new CustomEvent('databaseChange',{detail:data}));console.log('📢 Dispatched databaseChange event to components');});setSocket(newSocket);// Cleanup on unmount\nreturn()=>{newSocket.close();};},[]);const value={socket,isConnected,emit:(event,data)=>socket===null||socket===void 0?void 0:socket.emit(event,data),on:(event,callback)=>socket===null||socket===void 0?void 0:socket.on(event,callback),off:(event,callback)=>socket===null||socket===void 0?void 0:socket.off(event,callback)};return/*#__PURE__*/_jsx(SocketContext.Provider,{value:value,children:children});};export default SocketContext;","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsx","_jsx","SocketContext","useSocket","context","Error","SocketProvider","_ref","children","socket","setSocket","isConnected","setIsConnected","newSocket","transports","autoConnect","on","console","log","emit","room","data","message","window","dispatchEvent","CustomEvent","detail","close","value","event","callback","off","Provider"],"sources":["C:/Users/YSXP/Desktop/New folder/frontend/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Initialize socket connection\r\n    const newSocket = io('http://localhost:8000', {\r\n      transports: ['websocket', 'polling'],\r\n      autoConnect: true,\r\n    });\r\n\r\n    // Connection event handlers\r\n    newSocket.on('connect', () => {\r\n      console.log('🔌 Connected to WebSocket server');\r\n      setIsConnected(true);\r\n      \r\n      // Join admin room for targeted updates\r\n      newSocket.emit('join_room', { room: 'admin' });\r\n      console.log('🏠 Joined admin room');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('🔌 Disconnected from WebSocket server');\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('connected', (data) => {\r\n      console.log('✅ WebSocket connection confirmed:', data.message);\r\n    });\r\n\r\n    newSocket.on('joined_room', (data) => {\r\n      console.log('🏠 Joined room:', data.room);\r\n    });\r\n\r\n    // Database change event handler\r\n    newSocket.on('database_change', (data) => {\r\n      console.log('📡 Received database change via WebSocket:', data);\r\n      \r\n      // Emit custom event for components to listen to\r\n      window.dispatchEvent(new CustomEvent('databaseChange', {\r\n        detail: data\r\n      }));\r\n      console.log('📢 Dispatched databaseChange event to components');\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, []);\r\n\r\n  const value = {\r\n    socket,\r\n    isConnected,\r\n    emit: (event, data) => socket?.emit(event, data),\r\n    on: (event, callback) => socket?.on(event, callback),\r\n    off: (event, callback) => socket?.off(event, callback),\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SocketContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}